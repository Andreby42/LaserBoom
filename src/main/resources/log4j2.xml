<?xml version="1.0" encoding="UTF-8"?>
<!-- status : 这个用于设置log4j2自身内部的信息输出,可以不设置,当设置成trace时,会看到log4j2内部各种详细输出 monitorInterval 
	: Log4j能够自动检测修改配置文件和重新配置本身, 设置间隔秒数。 -->
<configuration status="off" monitorInterval="600">
	<properties>
		<property name="LOG_HOME">./logs</property>
		<!-- 日志备份目录 -->
		<property name="cLog">cLog</property>
		<property name="DeBug">DeBug</property>
	</properties>

	<appenders>
		<!-- log4jdbc -->
		<File name="log4jdbc_file" fileName="${LOG_HOME}/log4jdbc.out">
			<PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %level - %m%n%ex%n" />
		</File>
		<!-- 定义控制台输出 --><!-- 控制台只输出level及以上级别的信息(onMatch),其他的直接拒绝(onMismatch) -->
		<Console name="Console" target="SYSTEM_OUT" follow="true">

			<ThresholdFilter level="info" onMatch="ACCEPT"
				onMismatch="DENY" />
			<PatternLayout
				pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" />
		</Console>
		<!-- infoAppender输出日志到文件 ${sys:catalina.home} 为 web工程根目录 -->
		<RollingRandomAccessFile name="file"
			fileName="${LOG_HOME}/${cLog}.log" filePattern="/${LOG_HOME}/${cLog}.%d{yyyy-MM-dd-HH}.zip">
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M -- %msg%xEx%n" />
			<!-- pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] 
				- %msg%n" /> -->
			<Policies>
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<DefaultRolloverStrategy max="10" />
		</RollingRandomAccessFile>
		<!-- error日志格式 -->
		<RollingRandomAccessFile name="error"
			immediateFlush="false" fileName="${LOG_HOME}/${cLog}-error.log"
			filePattern="${LOG_HOME}/${cLog}-error.log.%d{yyyy-MM-dd}.error.zip">
			<PatternLayout
				pattern="%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level %class{36} %L %M -- %msg%xEx%n" />
			<Policies>
				<!-- 每天生成一个 -->
				<TimeBasedTriggeringPolicy interval="1"
					modulate="true" />
				<!--每个最大500MB -->
				<SizeBasedTriggeringPolicy size="100 MB" />
			</Policies>
			<DefaultRolloverStrategy max="5" />
		</RollingRandomAccessFile>
		<!-- 自定义缓存同步日志 -->
		<!-- <RollingRandomAccessFile name="customLog" fileName="${LOG_HOME}/${customLog}-customLog.log" 
			filePattern="${LOG_HOME}/customLog.%d{yyyy-MM-dd-HH}.zip"> <PatternLayout 
			pattern="%date{yyyy-MM-dd HH:mm:ss.SSS} %level [%thread][%file:%line] - %msg%n" 
			/> <Policies> <TimeBasedTriggeringPolicy interval="1" modulate="true" /> 
			<SizeBasedTriggeringPolicy size="100 MB" /> </Policies> <DefaultRolloverStrategy 
			max="20" /> </RollingRandomAccessFile> -->
	</appenders>
	<loggers>
		<!-- info级别的输出到日志 -->
		<logger name="error" level="Error" additivity="true">
			<appender-ref ref="error" />
		</logger>
		<logger name="file" level="info" additivity="true">
			<appender-ref ref="file" />
		</logger>
		<!-- Root Logger -->
		<root level="Info" includeLocation="true">
			<appender-ref ref="Console" />
			<!--<appender-ref ref="file" /> -->
		</root>
		<!-- 3rdparty Loggers -->
		<logger name="org.springframework.core" level="info" />
		<logger name="org.springframework.beans" level="info" />
		<logger name="org.springframework.context" level="info" />
		<logger name="org.springframework.web" level="info" />
		<logger name="org.jboss.netty" level="warn" />
		<logger name="org.apache.http" level="warn" />
		<logger name="org.hibernate" level="INFO" />
		<!-- 自定义 dataSyn logger -->
		<!-- <logger name="custom" level="Info" additivity="false"> <appender-ref 
			ref="customLog" /> </logger> -->
		<!-- log4jdbc4 -->
		<logger name="log4jdbc.log4j2" level="info" additivity="false">
			<MarkerFilter marker="LOG4JDBC_NON_STATEMENT" onMatch="DENY"
				onMismatch="NEUTRAL" />
			<appender-ref ref="log4jdbc_file" />
		</logger>
		<!-- sql 以及耗费的执行时间 -->
		<logger name="jdbc.sqltiming" level="INFO" additivity="false"></logger>
		<!-- 执行之后的返回结果 -->
		<logger name="jdbc.resultsettable" level="INFO"></logger>
		<!-- 只有 sql -->
		<logger name="jdbc.sqlonly" level="INFO"></logger>
		<logger name="jdbc.audit" level="OFF"></logger>
		<logger name="jdbc.resultset" level="OFF"></logger>
		<!-- 能看到数据库的连接数 -->
		<logger name="jdbc.connection" level="OFF"></logger>

	</loggers>
</configuration>  